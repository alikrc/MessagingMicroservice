// <auto-generated />
using System;
using Messaging.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Messaging.API.Migrations
{
    [DbContext(typeof(MessagingDbContext))]
    [Migration("20210131213840_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Messaging.Core.Entities.MessageAggregate.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("MessageDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Messaging.Core.Entities.UserAggregate.BlockedPeople", b =>
                {
                    b.Property<Guid>("BlockingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BlockedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BlockingUserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BlockingUserId");

                    b.HasIndex("BlockingUserId1");

                    b.ToTable("BlockedUsers");
                });

            modelBuilder.Entity("Messaging.Core.Entities.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Messaging.Core.Entities.UserAggregate.BlockedPeople", b =>
                {
                    b.HasOne("Messaging.Core.Entities.UserAggregate.User", "BlockedUser")
                        .WithMany("UsersBlockUser")
                        .HasForeignKey("BlockingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Messaging.Core.Entities.UserAggregate.User", "BlockingUser")
                        .WithMany("UsersBlockedByUser")
                        .HasForeignKey("BlockingUserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
